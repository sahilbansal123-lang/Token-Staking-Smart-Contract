{
	"id": "36319239f02c863eac4104074b281d05",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    IERC20 public s_stakeingToken;\r\n    IERC20 public s_rewardToken;\r\n\r\n    uint public constant REWARD_RATE=10;\r\n    uint private totalStakedTokens;\r\n    uint public rewardPerTokenStored;\r\n    uint public lastUpdateTime;\r\n\r\n    mapping (address=>uint256) public stakedBalance;\r\n    mapping (address=>uint256) public rewards;\r\n    mapping (address=>uint256) public useRewardPerTokenPaid;\r\n\r\n    event Staked(address indexed user, uint256 indexed amount);\r\n    event Withdrawn(address indexed user, uint256 indexed amount);\r\n    event RewardsClaimed(address indexed user, uint256 indexed amount);\r\n\r\n    constructor(address stakingToken, address rewardToken) {\r\n        s_stakeingToken = IERC20(stakingToken);\r\n        s_rewardToken = IERC20(rewardToken);\r\n    }\r\n\r\n    function rewardPerToken() public view returns(uint) {\r\n        if(totalStakedTokens == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n\r\n        uint totalTime = block.timestamp-lastUpdateTime;\r\n        uint totalRewards = REWARD_RATE*totalTime;\r\n        return rewardPerTokenStored + totalRewards/totalStakedTokens;\r\n    }\r\n\r\n    function earned(address account) public view returns(uint) {\r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BYTE 0xDA 0xD4 0xF8 SWAP15 0xB5 PUSH14 0xBDD13E60E667E865D60130C85C56 0x1E SELFDESTRUCT 0xE0 LOG1 0xEE 0x49 SWAP4 OR 0x27 STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY BYTE 0xDA 0xD4 0xF8 SWAP15 0xB5 PUSH14 0xBDD13E60E667E865D60130C85C56 0x1E SELFDESTRUCT 0xE0 LOG1 0xEE 0x49 SWAP4 OR 0x27 STOP PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "482:6210:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e1adad4f89eb56dbdd13e60e667e865d60130c85c561effe0a1ee499317270064736f6c63430008170033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_stakeingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "useRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Staking.sol\":251:1518  contract Staking is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Staking.sol\":926:1084  constructor(address stakingToken, address rewardToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1017:1029  stakingToken */\n  dup2\n    /* \"contracts/Staking.sol\":992:1007  s_stakeingToken */\n  0x01\n  0x00\n    /* \"contracts/Staking.sol\":992:1030  s_stakeingToken = IERC20(stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":1064:1075  rewardToken */\n  dup1\n    /* \"contracts/Staking.sol\":1041:1054  s_rewardToken */\n  0x02\n  0x00\n    /* \"contracts/Staking.sol\":1041:1076  s_rewardToken = IERC20(rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Staking.sol\":926:1084  constructor(address stakingToken, address rewardToken) {... */\n  pop\n  pop\n    /* \"contracts/Staking.sol\":251:1518  contract Staking is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":949:1068   */\ntag_29:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_31\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_32\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Staking.sol\":251:1518  contract Staking is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Staking.sol\":251:1518  contract Staking is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6374cc00\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x6374cc00\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6fab4536\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2cd2a93e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x60217267\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Staking.sol\":1434:1511  function earned(address account) public view returns(uint) {... */\n    tag_3:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":606:647  mapping (address=>uint256) public rewards */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":654:709  mapping (address=>uint256) public useRewardPerTokenPaid */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":399:434  uint public constant REWARD_RATE=10 */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":552:599  mapping (address=>uint256) public stakedBalance */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":363:390  IERC20 public s_rewardToken */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":327:356  IERC20 public s_stakeingToken */\n    tag_9:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":517:543  uint public lastUpdateTime */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1092:1426  function rewardPerToken() public view returns(uint) {... */\n    tag_11:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":478:510  uint public rewardPerTokenStored */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Staking.sol\":1434:1511  function earned(address account) public view returns(uint) {... */\n    tag_17:\n        /* \"contracts/Staking.sol\":1487:1491  uint */\n      0x00\n        /* \"contracts/Staking.sol\":1434:1511  function earned(address account) public view returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Staking.sol\":606:647  mapping (address=>uint256) public rewards */\n    tag_22:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":654:709  mapping (address=>uint256) public useRewardPerTokenPaid */\n    tag_26:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":399:434  uint public constant REWARD_RATE=10 */\n    tag_29:\n        /* \"contracts/Staking.sol\":432:434  10 */\n      0x0a\n        /* \"contracts/Staking.sol\":399:434  uint public constant REWARD_RATE=10 */\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":552:599  mapping (address=>uint256) public stakedBalance */\n    tag_33:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":363:390  IERC20 public s_rewardToken */\n    tag_36:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":327:356  IERC20 public s_stakeingToken */\n    tag_40:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":517:543  uint public lastUpdateTime */\n    tag_43:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Staking.sol\":1092:1426  function rewardPerToken() public view returns(uint) {... */\n    tag_46:\n        /* \"contracts/Staking.sol\":1138:1142  uint */\n      0x00\n        /* \"contracts/Staking.sol\":1179:1180  0 */\n      dup1\n        /* \"contracts/Staking.sol\":1158:1175  totalStakedTokens */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":1158:1180  totalStakedTokens == 0 */\n      sub\n        /* \"contracts/Staking.sol\":1155:1236  if(totalStakedTokens == 0) {... */\n      tag_53\n      jumpi\n        /* \"contracts/Staking.sol\":1204:1224  rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":1197:1224  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_52)\n        /* \"contracts/Staking.sol\":1155:1236  if(totalStakedTokens == 0) {... */\n    tag_53:\n        /* \"contracts/Staking.sol\":1248:1262  uint totalTime */\n      0x00\n        /* \"contracts/Staking.sol\":1281:1295  lastUpdateTime */\n      sload(0x05)\n        /* \"contracts/Staking.sol\":1265:1280  block.timestamp */\n      timestamp\n        /* \"contracts/Staking.sol\":1265:1295  block.timestamp-lastUpdateTime */\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"contracts/Staking.sol\":1248:1295  uint totalTime = block.timestamp-lastUpdateTime */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1306:1323  uint totalRewards */\n      0x00\n        /* \"contracts/Staking.sol\":1338:1347  totalTime */\n      dup2\n        /* \"contracts/Staking.sol\":432:434  10 */\n      0x0a\n        /* \"contracts/Staking.sol\":1326:1347  REWARD_RATE*totalTime */\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"contracts/Staking.sol\":1306:1347  uint totalRewards = REWARD_RATE*totalTime */\n      swap1\n      pop\n        /* \"contracts/Staking.sol\":1401:1418  totalStakedTokens */\n      sload(0x03)\n        /* \"contracts/Staking.sol\":1388:1400  totalRewards */\n      dup2\n        /* \"contracts/Staking.sol\":1388:1418  totalRewards/totalStakedTokens */\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"contracts/Staking.sol\":1365:1385  rewardPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Staking.sol\":1365:1418  rewardPerTokenStored + totalRewards/totalStakedTokens */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/Staking.sol\":1358:1418  return rewardPerTokenStored + totalRewards/totalStakedTokens */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Staking.sol\":1092:1426  function rewardPerToken() public view returns(uint) {... */\n    tag_52:\n      swap1\n      jump\t// out\n        /* \"contracts/Staking.sol\":478:510  uint public rewardPerTokenStored */\n    tag_49:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_63:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_65:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_66:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_84\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_65\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_67:\n        /* \"#utility.yul\":641:665   */\n      tag_86\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_87:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_68:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_89\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_67\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_16:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_92\n      tag_63\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":917:1036   */\n    tag_91:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_93\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_68\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_69:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_70:\n        /* \"#utility.yul\":1346:1370   */\n      tag_96\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_69\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_19:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_98\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_70\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1671   */\n    tag_71:\n        /* \"#utility.yul\":1639:1642   */\n      0x00\n        /* \"#utility.yul\":1660:1665   */\n      dup2\n        /* \"#utility.yul\":1653:1665   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1819   */\n    tag_72:\n        /* \"#utility.yul\":1727:1736   */\n      0x00\n        /* \"#utility.yul\":1760:1813   */\n      tag_101\n        /* \"#utility.yul\":1778:1812   */\n      tag_102\n        /* \"#utility.yul\":1787:1811   */\n      tag_103\n        /* \"#utility.yul\":1805:1810   */\n      dup5\n        /* \"#utility.yul\":1787:1811   */\n      tag_65\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1778:1812   */\n      tag_71\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1760:1813   */\n      tag_65\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1747:1813   */\n      swap1\n      pop\n        /* \"#utility.yul\":1677:1819   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1825:1951   */\n    tag_73:\n        /* \"#utility.yul\":1875:1884   */\n      0x00\n        /* \"#utility.yul\":1908:1945   */\n      tag_105\n        /* \"#utility.yul\":1939:1944   */\n      dup3\n        /* \"#utility.yul\":1908:1945   */\n      tag_72\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1895:1945   */\n      swap1\n      pop\n        /* \"#utility.yul\":1825:1951   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2097   */\n    tag_74:\n        /* \"#utility.yul\":2021:2030   */\n      0x00\n        /* \"#utility.yul\":2054:2091   */\n      tag_107\n        /* \"#utility.yul\":2085:2090   */\n      dup3\n        /* \"#utility.yul\":2054:2091   */\n      tag_73\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":2041:2091   */\n      swap1\n      pop\n        /* \"#utility.yul\":1957:2097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2103:2262   */\n    tag_75:\n        /* \"#utility.yul\":2204:2255   */\n      tag_109\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2204:2255   */\n      tag_74\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2199:2202   */\n      dup3\n        /* \"#utility.yul\":2192:2256   */\n      mstore\n        /* \"#utility.yul\":2103:2262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2518   */\n    tag_38:\n        /* \"#utility.yul\":2375:2379   */\n      0x00\n        /* \"#utility.yul\":2413:2415   */\n      0x20\n        /* \"#utility.yul\":2402:2411   */\n      dup3\n        /* \"#utility.yul\":2398:2416   */\n      add\n        /* \"#utility.yul\":2390:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2426:2511   */\n      tag_111\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2497:2506   */\n      dup4\n        /* \"#utility.yul\":2493:2510   */\n      add\n        /* \"#utility.yul\":2484:2490   */\n      dup5\n        /* \"#utility.yul\":2426:2511   */\n      tag_75\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2268:2518   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2704   */\n    tag_76:\n        /* \"#utility.yul\":2572:2649   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2569:2570   */\n      0x00\n        /* \"#utility.yul\":2562:2650   */\n      mstore\n        /* \"#utility.yul\":2669:2673   */\n      0x11\n        /* \"#utility.yul\":2666:2667   */\n      0x04\n        /* \"#utility.yul\":2659:2674   */\n      mstore\n        /* \"#utility.yul\":2693:2697   */\n      0x24\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2683:2698   */\n      revert\n        /* \"#utility.yul\":2710:2904   */\n    tag_55:\n        /* \"#utility.yul\":2750:2754   */\n      0x00\n        /* \"#utility.yul\":2770:2790   */\n      tag_114\n        /* \"#utility.yul\":2788:2789   */\n      dup3\n        /* \"#utility.yul\":2770:2790   */\n      tag_69\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":2765:2790   */\n      swap2\n      pop\n        /* \"#utility.yul\":2804:2824   */\n      tag_115\n        /* \"#utility.yul\":2822:2823   */\n      dup4\n        /* \"#utility.yul\":2804:2824   */\n      tag_69\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2799:2824   */\n      swap3\n      pop\n        /* \"#utility.yul\":2848:2849   */\n      dup3\n        /* \"#utility.yul\":2845:2846   */\n      dup3\n        /* \"#utility.yul\":2841:2850   */\n      sub\n        /* \"#utility.yul\":2833:2850   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2873   */\n      dup2\n        /* \"#utility.yul\":2866:2870   */\n      dup2\n        /* \"#utility.yul\":2863:2874   */\n      gt\n        /* \"#utility.yul\":2860:2897   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":2877:2895   */\n      tag_117\n      tag_76\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2860:2897   */\n    tag_116:\n        /* \"#utility.yul\":2710:2904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:3320   */\n    tag_57:\n        /* \"#utility.yul\":2950:2957   */\n      0x00\n        /* \"#utility.yul\":2973:2993   */\n      tag_119\n        /* \"#utility.yul\":2991:2992   */\n      dup3\n        /* \"#utility.yul\":2973:2993   */\n      tag_69\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2968:2993   */\n      swap2\n      pop\n        /* \"#utility.yul\":3007:3027   */\n      tag_120\n        /* \"#utility.yul\":3025:3026   */\n      dup4\n        /* \"#utility.yul\":3007:3027   */\n      tag_69\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3002:3027   */\n      swap3\n      pop\n        /* \"#utility.yul\":3062:3063   */\n      dup3\n        /* \"#utility.yul\":3059:3060   */\n      dup3\n        /* \"#utility.yul\":3055:3064   */\n      mul\n        /* \"#utility.yul\":3084:3114   */\n      tag_121\n        /* \"#utility.yul\":3102:3113   */\n      dup2\n        /* \"#utility.yul\":3084:3114   */\n      tag_69\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3073:3114   */\n      swap2\n      pop\n        /* \"#utility.yul\":3263:3264   */\n      dup3\n        /* \"#utility.yul\":3254:3261   */\n      dup3\n        /* \"#utility.yul\":3250:3265   */\n      div\n        /* \"#utility.yul\":3247:3248   */\n      dup5\n        /* \"#utility.yul\":3244:3266   */\n      eq\n        /* \"#utility.yul\":3224:3225   */\n      dup4\n        /* \"#utility.yul\":3217:3226   */\n      iszero\n        /* \"#utility.yul\":3197:3280   */\n      or\n        /* \"#utility.yul\":3174:3313   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3293:3311   */\n      tag_123\n      tag_76\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3174:3313   */\n    tag_122:\n        /* \"#utility.yul\":2958:3320   */\n      pop\n        /* \"#utility.yul\":2910:3320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3326:3506   */\n    tag_77:\n        /* \"#utility.yul\":3374:3451   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3371:3372   */\n      0x00\n        /* \"#utility.yul\":3364:3452   */\n      mstore\n        /* \"#utility.yul\":3471:3475   */\n      0x12\n        /* \"#utility.yul\":3468:3469   */\n      0x04\n        /* \"#utility.yul\":3461:3476   */\n      mstore\n        /* \"#utility.yul\":3495:3499   */\n      0x24\n        /* \"#utility.yul\":3492:3493   */\n      0x00\n        /* \"#utility.yul\":3485:3500   */\n      revert\n        /* \"#utility.yul\":3512:3697   */\n    tag_59:\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3569:3589   */\n      tag_126\n        /* \"#utility.yul\":3587:3588   */\n      dup3\n        /* \"#utility.yul\":3569:3589   */\n      tag_69\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3564:3589   */\n      swap2\n      pop\n        /* \"#utility.yul\":3603:3623   */\n      tag_127\n        /* \"#utility.yul\":3621:3622   */\n      dup4\n        /* \"#utility.yul\":3603:3623   */\n      tag_69\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3598:3623   */\n      swap3\n      pop\n        /* \"#utility.yul\":3642:3643   */\n      dup3\n        /* \"#utility.yul\":3632:3667   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":3647:3665   */\n      tag_129\n      tag_77\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":3632:3667   */\n    tag_128:\n        /* \"#utility.yul\":3689:3690   */\n      dup3\n        /* \"#utility.yul\":3686:3687   */\n      dup3\n        /* \"#utility.yul\":3682:3691   */\n      div\n        /* \"#utility.yul\":3677:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3512:3697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3894   */\n    tag_61:\n        /* \"#utility.yul\":3743:3746   */\n      0x00\n        /* \"#utility.yul\":3762:3782   */\n      tag_131\n        /* \"#utility.yul\":3780:3781   */\n      dup3\n        /* \"#utility.yul\":3762:3782   */\n      tag_69\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3757:3782   */\n      swap2\n      pop\n        /* \"#utility.yul\":3796:3816   */\n      tag_132\n        /* \"#utility.yul\":3814:3815   */\n      dup4\n        /* \"#utility.yul\":3796:3816   */\n      tag_69\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3791:3816   */\n      swap3\n      pop\n        /* \"#utility.yul\":3839:3840   */\n      dup3\n        /* \"#utility.yul\":3836:3837   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      add\n        /* \"#utility.yul\":3825:3841   */\n      swap1\n      pop\n        /* \"#utility.yul\":3860:3863   */\n      dup1\n        /* \"#utility.yul\":3857:3858   */\n      dup3\n        /* \"#utility.yul\":3854:3864   */\n      gt\n        /* \"#utility.yul\":3851:3887   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3867:3885   */\n      tag_134\n      tag_76\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3851:3887   */\n    tag_133:\n        /* \"#utility.yul\":3703:3894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220635f0664d26e17cf381b2e99c5395e09ea68f16522e49e0564e12c1b848e058464736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_529": {
									"entryPoint": null,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1355:4",
										"nodeType": "YulBlock",
										"src": "0:1355:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "939:413:4",
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:4",
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nativeSrc": "987:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nativeSrc": "987:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nativeSrc": "956:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:4",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nativeSrc": "952:32:4",
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nativeSrc": "949:119:4",
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nativeSrc": "1078:128:4",
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nativeSrc": "1093:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nativeSrc": "1164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nativeSrc": "1132:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:4",
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nativeSrc": "1231:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nativeSrc": "1303:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nativeSrc": "1271:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:4",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:4",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:4",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:4",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516107083803806107088339818101604052810190610031919061011d565b60015f819055508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015b565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100ec826100c3565b9050919050565b6100fc816100e2565b8114610106575f80fd5b50565b5f81519050610117816100f3565b92915050565b5f8060408385031215610133576101326100bf565b5b5f61014085828601610109565b925050602061015185828601610109565b9150509250929050565b6105a0806101685f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c80636374cc00116100645780636374cc001461017d5780636fab45361461019b578063c8f33c91146101b9578063cd3daf9d146101d7578063df136d65146101f55761009b565b80628cc2621461009f5780630700037d146100cf5780632cd2a93e146100ff5780635997bb371461012f578063602172671461014d575b5f80fd5b6100b960048036038101906100b49190610369565b610213565b6040516100c691906103ac565b60405180910390f35b6100e960048036038101906100e49190610369565b610219565b6040516100f691906103ac565b60405180910390f35b61011960048036038101906101149190610369565b61022e565b60405161012691906103ac565b60405180910390f35b610137610243565b60405161014491906103ac565b60405180910390f35b61016760048036038101906101629190610369565b610248565b60405161017491906103ac565b60405180910390f35b61018561025d565b6040516101929190610420565b60405180910390f35b6101a3610282565b6040516101b09190610420565b60405180910390f35b6101c16102a7565b6040516101ce91906103ac565b60405180910390f35b6101df6102ad565b6040516101ec91906103ac565b60405180910390f35b6101fd610305565b60405161020a91906103ac565b60405180910390f35b5f919050565b6007602052805f5260405f205f915090505481565b6008602052805f5260405f205f915090505481565b600a81565b6006602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b5f80600354036102c1576004549050610302565b5f600554426102d09190610466565b90505f81600a6102e09190610499565b9050600354816102f09190610507565b6004546102fd9190610537565b925050505b90565b60045481565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103388261030f565b9050919050565b6103488161032e565b8114610352575f80fd5b50565b5f813590506103638161033f565b92915050565b5f6020828403121561037e5761037d61030b565b5b5f61038b84828501610355565b91505092915050565b5f819050919050565b6103a681610394565b82525050565b5f6020820190506103bf5f83018461039d565b92915050565b5f819050919050565b5f6103e86103e36103de8461030f565b6103c5565b61030f565b9050919050565b5f6103f9826103ce565b9050919050565b5f61040a826103ef565b9050919050565b61041a81610400565b82525050565b5f6020820190506104335f830184610411565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61047082610394565b915061047b83610394565b925082820390508181111561049357610492610439565b5b92915050565b5f6104a382610394565b91506104ae83610394565b92508282026104bc81610394565b915082820484148315176104d3576104d2610439565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61051182610394565b915061051c83610394565b92508261052c5761052b6104da565b5b828204905092915050565b5f61054182610394565b915061054c83610394565b925082820190508082111561056457610563610439565b5b9291505056fea2646970667358221220635f0664d26e17cf381b2e99c5395e09ea68f16522e49e0564e12c1b848e058464736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x708 CODESIZE SUB DUP1 PUSH2 0x708 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x11D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x15B JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC DUP2 PUSH2 0xE2 JUMP JUMPDEST DUP2 EQ PUSH2 0x106 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x117 DUP2 PUSH2 0xF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133 JUMPI PUSH2 0x132 PUSH2 0xBF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x140 DUP6 DUP3 DUP7 ADD PUSH2 0x109 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x151 DUP6 DUP3 DUP7 ADD PUSH2 0x109 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A0 DUP1 PUSH2 0x168 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6374CC00 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6374CC00 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x6FAB4536 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x1F5 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x2CD2A93E EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0x2C1 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x302 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0xA PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP3 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP2 EQ PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x363 DUP2 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x30B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x38B DUP5 DUP3 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BF PUSH0 DUP4 ADD DUP5 PUSH2 0x39D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E3 PUSH2 0x3DE DUP5 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F9 DUP3 PUSH2 0x3CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x40A DUP3 PUSH2 0x3EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41A DUP2 PUSH2 0x400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x433 PUSH0 DUP4 ADD DUP5 PUSH2 0x411 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x470 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x47B DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x493 JUMPI PUSH2 0x492 PUSH2 0x439 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A3 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AE DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4BC DUP2 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4D3 JUMPI PUSH2 0x4D2 PUSH2 0x439 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x511 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x51C DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x52C JUMPI PUSH2 0x52B PUSH2 0x4DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x541 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x54C DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x439 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5F0664D2 PUSH15 0x17CF381B2E99C5395E09EA68F16522 0xE4 SWAP15 SDIV PUSH5 0xE12C1B848E SDIV DUP5 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "251:1267:3:-:0;;;926:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;1017:12:3;992:15;;:38;;;;;;;;;;;;;;;;;;1064:11;1041:13;;:35;;;;;;;;;;;;;;;;;;926:158;;251:1267;;88:117:4;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;251:1267:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REWARD_RATE_473": {
									"entryPoint": 579,
									"id": 473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_569": {
									"entryPoint": 531,
									"id": 569,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastUpdateTime_479": {
									"entryPoint": 679,
									"id": 479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_477": {
									"entryPoint": 773,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_561": {
									"entryPoint": 685,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewards_487": {
									"entryPoint": 537,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardToken_470": {
									"entryPoint": 605,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_stakeingToken_467": {
									"entryPoint": 642,
									"id": 467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakedBalance_483": {
									"entryPoint": 584,
									"id": 483,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@useRewardPerTokenPaid_491": {
									"entryPoint": 558,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 1056,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3897:4",
										"nodeType": "YulBlock",
										"src": "0:3897:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1221:32:4",
													"nodeType": "YulBlock",
													"src": "1221:32:4",
													"statements": [
														{
															"nativeSrc": "1231:16:4",
															"nodeType": "YulAssignment",
															"src": "1231:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:4",
																"nodeType": "YulIdentifier",
																"src": "1242:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:4",
														"nodeType": "YulTypedName",
														"src": "1203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:4",
														"nodeType": "YulTypedName",
														"src": "1213:7:4",
														"type": ""
													}
												],
												"src": "1176:77:4"
											},
											{
												"body": {
													"nativeSrc": "1324:53:4",
													"nodeType": "YulBlock",
													"src": "1324:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:4"
																		},
																		"nativeSrc": "1346:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:4"
																},
																"nativeSrc": "1334:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:4"
															},
															"nativeSrc": "1334:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:4",
														"nodeType": "YulTypedName",
														"src": "1319:3:4",
														"type": ""
													}
												],
												"src": "1259:118:4"
											},
											{
												"body": {
													"nativeSrc": "1481:124:4",
													"nodeType": "YulBlock",
													"src": "1481:124:4",
													"statements": [
														{
															"nativeSrc": "1491:26:4",
															"nodeType": "YulAssignment",
															"src": "1491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:4"
																},
																"nativeSrc": "1499:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:4"
																		},
																		"nativeSrc": "1580:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:4"
																},
																"nativeSrc": "1527:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:4"
															},
															"nativeSrc": "1527:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:4",
														"nodeType": "YulTypedName",
														"src": "1453:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:4",
														"nodeType": "YulTypedName",
														"src": "1465:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:4",
														"nodeType": "YulTypedName",
														"src": "1476:4:4",
														"type": ""
													}
												],
												"src": "1383:222:4"
											},
											{
												"body": {
													"nativeSrc": "1643:28:4",
													"nodeType": "YulBlock",
													"src": "1643:28:4",
													"statements": [
														{
															"nativeSrc": "1653:12:4",
															"nodeType": "YulAssignment",
															"src": "1653:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "1660:5:4",
																"nodeType": "YulIdentifier",
																"src": "1660:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1653:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1653:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1611:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1629:5:4",
														"nodeType": "YulTypedName",
														"src": "1629:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1639:3:4",
														"nodeType": "YulTypedName",
														"src": "1639:3:4",
														"type": ""
													}
												],
												"src": "1611:60:4"
											},
											{
												"body": {
													"nativeSrc": "1737:82:4",
													"nodeType": "YulBlock",
													"src": "1737:82:4",
													"statements": [
														{
															"nativeSrc": "1747:66:4",
															"nodeType": "YulAssignment",
															"src": "1747:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1805:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1805:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1787:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1787:17:4"
																				},
																				"nativeSrc": "1787:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1787:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1778:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "1778:8:4"
																		},
																		"nativeSrc": "1778:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1778:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1760:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1760:17:4"
																},
																"nativeSrc": "1760:53:4",
																"nodeType": "YulFunctionCall",
																"src": "1760:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1747:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1677:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1717:5:4",
														"nodeType": "YulTypedName",
														"src": "1717:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1727:9:4",
														"nodeType": "YulTypedName",
														"src": "1727:9:4",
														"type": ""
													}
												],
												"src": "1677:142:4"
											},
											{
												"body": {
													"nativeSrc": "1885:66:4",
													"nodeType": "YulBlock",
													"src": "1885:66:4",
													"statements": [
														{
															"nativeSrc": "1895:50:4",
															"nodeType": "YulAssignment",
															"src": "1895:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1939:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1939:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1908:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "1908:30:4"
																},
																"nativeSrc": "1908:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1908:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1895:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "1895:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1825:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1865:5:4",
														"nodeType": "YulTypedName",
														"src": "1865:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1875:9:4",
														"nodeType": "YulTypedName",
														"src": "1875:9:4",
														"type": ""
													}
												],
												"src": "1825:126:4"
											},
											{
												"body": {
													"nativeSrc": "2031:66:4",
													"nodeType": "YulBlock",
													"src": "2031:66:4",
													"statements": [
														{
															"nativeSrc": "2041:50:4",
															"nodeType": "YulAssignment",
															"src": "2041:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2085:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2085:5:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2054:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "2054:30:4"
																},
																"nativeSrc": "2054:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2054:37:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2041:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2041:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "1957:140:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2011:5:4",
														"nodeType": "YulTypedName",
														"src": "2011:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2021:9:4",
														"nodeType": "YulTypedName",
														"src": "2021:9:4",
														"type": ""
													}
												],
												"src": "1957:140:4"
											},
											{
												"body": {
													"nativeSrc": "2182:80:4",
													"nodeType": "YulBlock",
													"src": "2182:80:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2199:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2199:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:4"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "2204:44:4",
																			"nodeType": "YulIdentifier",
																			"src": "2204:44:4"
																		},
																		"nativeSrc": "2204:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2204:51:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2192:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:4"
																},
																"nativeSrc": "2192:64:4",
																"nodeType": "YulFunctionCall",
																"src": "2192:64:4"
															},
															"nativeSrc": "2192:64:4",
															"nodeType": "YulExpressionStatement",
															"src": "2192:64:4"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "2103:159:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2170:5:4",
														"nodeType": "YulTypedName",
														"src": "2170:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2177:3:4",
														"nodeType": "YulTypedName",
														"src": "2177:3:4",
														"type": ""
													}
												],
												"src": "2103:159:4"
											},
											{
												"body": {
													"nativeSrc": "2380:138:4",
													"nodeType": "YulBlock",
													"src": "2380:138:4",
													"statements": [
														{
															"nativeSrc": "2390:26:4",
															"nodeType": "YulAssignment",
															"src": "2390:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2402:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2402:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2413:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2413:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2398:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:4"
																},
																"nativeSrc": "2398:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2398:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2390:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2390:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2484:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2497:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2497:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2508:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2508:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2493:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:4"
																		},
																		"nativeSrc": "2493:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "2426:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "2426:57:4"
																},
																"nativeSrc": "2426:85:4",
																"nodeType": "YulFunctionCall",
																"src": "2426:85:4"
															},
															"nativeSrc": "2426:85:4",
															"nodeType": "YulExpressionStatement",
															"src": "2426:85:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "2268:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2352:9:4",
														"nodeType": "YulTypedName",
														"src": "2352:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2364:6:4",
														"nodeType": "YulTypedName",
														"src": "2364:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2375:4:4",
														"nodeType": "YulTypedName",
														"src": "2375:4:4",
														"type": ""
													}
												],
												"src": "2268:250:4"
											},
											{
												"body": {
													"nativeSrc": "2552:152:4",
													"nodeType": "YulBlock",
													"src": "2552:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2569:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2569:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2572:77:4",
																		"nodeType": "YulLiteral",
																		"src": "2572:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2562:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2562:6:4"
																},
																"nativeSrc": "2562:88:4",
																"nodeType": "YulFunctionCall",
																"src": "2562:88:4"
															},
															"nativeSrc": "2562:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "2562:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2666:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2666:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2669:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2669:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2659:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:4"
																},
																"nativeSrc": "2659:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2659:15:4"
															},
															"nativeSrc": "2659:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2659:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2690:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2690:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2693:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2693:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2683:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2683:6:4"
																},
																"nativeSrc": "2683:15:4",
																"nodeType": "YulFunctionCall",
																"src": "2683:15:4"
															},
															"nativeSrc": "2683:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "2683:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2524:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "2524:180:4"
											},
											{
												"body": {
													"nativeSrc": "2755:149:4",
													"nodeType": "YulBlock",
													"src": "2755:149:4",
													"statements": [
														{
															"nativeSrc": "2765:25:4",
															"nodeType": "YulAssignment",
															"src": "2765:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2788:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2788:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2770:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2770:17:4"
																},
																"nativeSrc": "2770:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2770:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2765:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "2765:1:4"
																}
															]
														},
														{
															"nativeSrc": "2799:25:4",
															"nodeType": "YulAssignment",
															"src": "2799:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2822:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2822:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2804:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2804:17:4"
																},
																"nativeSrc": "2804:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2804:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2799:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "2799:1:4"
																}
															]
														},
														{
															"nativeSrc": "2833:17:4",
															"nodeType": "YulAssignment",
															"src": "2833:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2845:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2845:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2848:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2848:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2841:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:4"
																},
																"nativeSrc": "2841:9:4",
																"nodeType": "YulFunctionCall",
																"src": "2841:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2833:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2833:4:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2875:22:4",
																"nodeType": "YulBlock",
																"src": "2875:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2877:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2877:16:4"
																			},
																			"nativeSrc": "2877:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2877:18:4"
																		},
																		"nativeSrc": "2877:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2866:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2866:4:4"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2872:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2872:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2863:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2863:2:4"
																},
																"nativeSrc": "2863:11:4",
																"nodeType": "YulFunctionCall",
																"src": "2863:11:4"
															},
															"nativeSrc": "2860:37:4",
															"nodeType": "YulIf",
															"src": "2860:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2710:194:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2741:1:4",
														"nodeType": "YulTypedName",
														"src": "2741:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2744:1:4",
														"nodeType": "YulTypedName",
														"src": "2744:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2750:4:4",
														"nodeType": "YulTypedName",
														"src": "2750:4:4",
														"type": ""
													}
												],
												"src": "2710:194:4"
											},
											{
												"body": {
													"nativeSrc": "2958:362:4",
													"nodeType": "YulBlock",
													"src": "2958:362:4",
													"statements": [
														{
															"nativeSrc": "2968:25:4",
															"nodeType": "YulAssignment",
															"src": "2968:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2991:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "2991:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2973:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "2973:17:4"
																},
																"nativeSrc": "2973:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2973:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2968:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "2968:1:4"
																}
															]
														},
														{
															"nativeSrc": "3002:25:4",
															"nodeType": "YulAssignment",
															"src": "3002:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3025:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3025:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3007:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3007:17:4"
																},
																"nativeSrc": "3007:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3007:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3002:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3002:1:4"
																}
															]
														},
														{
															"nativeSrc": "3036:28:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3036:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3059:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3059:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3062:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3062:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3055:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:4"
																},
																"nativeSrc": "3055:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3055:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3040:11:4",
																	"nodeType": "YulTypedName",
																	"src": "3040:11:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3073:41:4",
															"nodeType": "YulAssignment",
															"src": "3073:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3102:11:4",
																		"nodeType": "YulIdentifier",
																		"src": "3102:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3084:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3084:17:4"
																},
																"nativeSrc": "3084:30:4",
																"nodeType": "YulFunctionCall",
																"src": "3084:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3073:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3291:22:4",
																"nodeType": "YulBlock",
																"src": "3291:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3293:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3293:16:4"
																			},
																			"nativeSrc": "3293:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3293:18:4"
																		},
																		"nativeSrc": "3293:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3293:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3224:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3224:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3217:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3217:6:4"
																				},
																				"nativeSrc": "3217:9:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3217:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3247:1:4",
																						"nodeType": "YulIdentifier",
																						"src": "3247:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3254:7:4",
																								"nodeType": "YulIdentifier",
																								"src": "3254:7:4"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3263:1:4",
																								"nodeType": "YulIdentifier",
																								"src": "3263:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3250:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "3250:3:4"
																						},
																						"nativeSrc": "3250:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3250:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3244:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "3244:2:4"
																				},
																				"nativeSrc": "3244:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3244:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3197:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3197:2:4"
																		},
																		"nativeSrc": "3197:83:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3177:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3177:6:4"
																},
																"nativeSrc": "3177:113:4",
																"nodeType": "YulFunctionCall",
																"src": "3177:113:4"
															},
															"nativeSrc": "3174:139:4",
															"nodeType": "YulIf",
															"src": "3174:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2910:410:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2941:1:4",
														"nodeType": "YulTypedName",
														"src": "2941:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2944:1:4",
														"nodeType": "YulTypedName",
														"src": "2944:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2950:7:4",
														"nodeType": "YulTypedName",
														"src": "2950:7:4",
														"type": ""
													}
												],
												"src": "2910:410:4"
											},
											{
												"body": {
													"nativeSrc": "3354:152:4",
													"nodeType": "YulBlock",
													"src": "3354:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3371:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3371:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3374:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3364:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:4"
																},
																"nativeSrc": "3364:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3364:88:4"
															},
															"nativeSrc": "3364:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3364:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3468:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3468:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3471:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3471:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3461:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3461:6:4"
																},
																"nativeSrc": "3461:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3461:15:4"
															},
															"nativeSrc": "3461:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3461:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3492:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3492:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3495:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3495:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3485:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:4"
																},
																"nativeSrc": "3485:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3485:15:4"
															},
															"nativeSrc": "3485:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3485:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "3326:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3326:180:4"
											},
											{
												"body": {
													"nativeSrc": "3554:143:4",
													"nodeType": "YulBlock",
													"src": "3554:143:4",
													"statements": [
														{
															"nativeSrc": "3564:25:4",
															"nodeType": "YulAssignment",
															"src": "3564:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3587:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3587:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3569:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3569:17:4"
																},
																"nativeSrc": "3569:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3569:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3564:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3564:1:4"
																}
															]
														},
														{
															"nativeSrc": "3598:25:4",
															"nodeType": "YulAssignment",
															"src": "3598:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3621:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3621:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3603:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3603:17:4"
																},
																"nativeSrc": "3603:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3603:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3598:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3598:1:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3645:22:4",
																"nodeType": "YulBlock",
																"src": "3645:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3647:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3647:16:4"
																			},
																			"nativeSrc": "3647:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3647:18:4"
																		},
																		"nativeSrc": "3647:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3647:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3642:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3642:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3635:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3635:6:4"
																},
																"nativeSrc": "3635:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3635:9:4"
															},
															"nativeSrc": "3632:35:4",
															"nodeType": "YulIf",
															"src": "3632:35:4"
														},
														{
															"nativeSrc": "3677:14:4",
															"nodeType": "YulAssignment",
															"src": "3677:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3686:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3686:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3689:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3689:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3682:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:4"
																},
																"nativeSrc": "3682:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3682:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3677:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3677:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3512:185:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3543:1:4",
														"nodeType": "YulTypedName",
														"src": "3543:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3546:1:4",
														"nodeType": "YulTypedName",
														"src": "3546:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3552:1:4",
														"nodeType": "YulTypedName",
														"src": "3552:1:4",
														"type": ""
													}
												],
												"src": "3512:185:4"
											},
											{
												"body": {
													"nativeSrc": "3747:147:4",
													"nodeType": "YulBlock",
													"src": "3747:147:4",
													"statements": [
														{
															"nativeSrc": "3757:25:4",
															"nodeType": "YulAssignment",
															"src": "3757:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3780:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3780:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3762:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3762:17:4"
																},
																"nativeSrc": "3762:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3762:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3757:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3757:1:4"
																}
															]
														},
														{
															"nativeSrc": "3791:25:4",
															"nodeType": "YulAssignment",
															"src": "3791:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3814:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3814:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3796:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3796:17:4"
																},
																"nativeSrc": "3796:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3796:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3791:1:4",
																	"nodeType": "YulIdentifier",
																	"src": "3791:1:4"
																}
															]
														},
														{
															"nativeSrc": "3825:16:4",
															"nodeType": "YulAssignment",
															"src": "3825:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3836:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3836:1:4"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3839:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3839:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3832:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3832:3:4"
																},
																"nativeSrc": "3832:9:4",
																"nodeType": "YulFunctionCall",
																"src": "3832:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3825:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3825:3:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3865:22:4",
																"nodeType": "YulBlock",
																"src": "3865:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3867:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "3867:16:4"
																			},
																			"nativeSrc": "3867:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3867:18:4"
																		},
																		"nativeSrc": "3867:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3867:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3857:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "3857:1:4"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3860:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3860:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3854:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3854:2:4"
																},
																"nativeSrc": "3854:10:4",
																"nodeType": "YulFunctionCall",
																"src": "3854:10:4"
															},
															"nativeSrc": "3851:36:4",
															"nodeType": "YulIf",
															"src": "3851:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3703:191:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3734:1:4",
														"nodeType": "YulTypedName",
														"src": "3734:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3737:1:4",
														"nodeType": "YulTypedName",
														"src": "3737:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3743:3:4",
														"nodeType": "YulTypedName",
														"src": "3743:3:4",
														"type": ""
													}
												],
												"src": "3703:191:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061009b575f3560e01c80636374cc00116100645780636374cc001461017d5780636fab45361461019b578063c8f33c91146101b9578063cd3daf9d146101d7578063df136d65146101f55761009b565b80628cc2621461009f5780630700037d146100cf5780632cd2a93e146100ff5780635997bb371461012f578063602172671461014d575b5f80fd5b6100b960048036038101906100b49190610369565b610213565b6040516100c691906103ac565b60405180910390f35b6100e960048036038101906100e49190610369565b610219565b6040516100f691906103ac565b60405180910390f35b61011960048036038101906101149190610369565b61022e565b60405161012691906103ac565b60405180910390f35b610137610243565b60405161014491906103ac565b60405180910390f35b61016760048036038101906101629190610369565b610248565b60405161017491906103ac565b60405180910390f35b61018561025d565b6040516101929190610420565b60405180910390f35b6101a3610282565b6040516101b09190610420565b60405180910390f35b6101c16102a7565b6040516101ce91906103ac565b60405180910390f35b6101df6102ad565b6040516101ec91906103ac565b60405180910390f35b6101fd610305565b60405161020a91906103ac565b60405180910390f35b5f919050565b6007602052805f5260405f205f915090505481565b6008602052805f5260405f205f915090505481565b600a81565b6006602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b5f80600354036102c1576004549050610302565b5f600554426102d09190610466565b90505f81600a6102e09190610499565b9050600354816102f09190610507565b6004546102fd9190610537565b925050505b90565b60045481565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103388261030f565b9050919050565b6103488161032e565b8114610352575f80fd5b50565b5f813590506103638161033f565b92915050565b5f6020828403121561037e5761037d61030b565b5b5f61038b84828501610355565b91505092915050565b5f819050919050565b6103a681610394565b82525050565b5f6020820190506103bf5f83018461039d565b92915050565b5f819050919050565b5f6103e86103e36103de8461030f565b6103c5565b61030f565b9050919050565b5f6103f9826103ce565b9050919050565b5f61040a826103ef565b9050919050565b61041a81610400565b82525050565b5f6020820190506104335f830184610411565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61047082610394565b915061047b83610394565b925082820390508181111561049357610492610439565b5b92915050565b5f6104a382610394565b91506104ae83610394565b92508282026104bc81610394565b915082820484148315176104d3576104d2610439565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61051182610394565b915061051c83610394565b92508261052c5761052b6104da565b5b828204905092915050565b5f61054182610394565b915061054c83610394565b925082820190508082111561056457610563610439565b5b9291505056fea2646970667358221220635f0664d26e17cf381b2e99c5395e09ea68f16522e49e0564e12c1b848e058464736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6374CC00 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6374CC00 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x6FAB4536 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x1F5 JUMPI PUSH2 0x9B JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x2CD2A93E EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x60217267 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x119 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x22E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x369 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH2 0x282 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD SUB PUSH2 0x2C1 JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x302 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x466 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0xA PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x537 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x338 DUP3 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x32E JUMP JUMPDEST DUP2 EQ PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x363 DUP2 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x30B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x38B DUP5 DUP3 DUP6 ADD PUSH2 0x355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A6 DUP2 PUSH2 0x394 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3BF PUSH0 DUP4 ADD DUP5 PUSH2 0x39D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E3 PUSH2 0x3DE DUP5 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3F9 DUP3 PUSH2 0x3CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x40A DUP3 PUSH2 0x3EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41A DUP2 PUSH2 0x400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x433 PUSH0 DUP4 ADD DUP5 PUSH2 0x411 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x470 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x47B DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x493 JUMPI PUSH2 0x492 PUSH2 0x439 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A3 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AE DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4BC DUP2 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4D3 JUMPI PUSH2 0x4D2 PUSH2 0x439 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x511 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x51C DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x52C JUMPI PUSH2 0x52B PUSH2 0x4DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x541 DUP3 PUSH2 0x394 JUMP JUMPDEST SWAP2 POP PUSH2 0x54C DUP4 PUSH2 0x394 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x564 JUMPI PUSH2 0x563 PUSH2 0x439 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x5F0664D2 PUSH15 0x17CF381B2E99C5395E09EA68F16522 0xE4 SWAP15 SDIV PUSH5 0xE12C1B848E SDIV DUP5 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "251:1267:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:77;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;606:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:55;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;399:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;552:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;363:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;327:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;517:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1092:334;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1434:77;1487:4;1434:77;;;:::o;606:41::-;;;;;;;;;;;;;;;;;:::o;654:55::-;;;;;;;;;;;;;;;;;:::o;399:35::-;432:2;399:35;:::o;552:47::-;;;;;;;;;;;;;;;;;:::o;363:27::-;;;;;;;;;;;;;:::o;327:29::-;;;;;;;;;;;;;:::o;517:26::-;;;;:::o;1092:334::-;1138:4;1179:1;1158:17;;:22;1155:81;;1204:20;;1197:27;;;;1155:81;1248:14;1281;;1265:15;:30;;;;:::i;:::-;1248:47;;1306:17;1338:9;432:2;1326:21;;;;:::i;:::-;1306:41;;1401:17;;1388:12;:30;;;;:::i;:::-;1365:20;;:53;;;;:::i;:::-;1358:60;;;;1092:334;;:::o;478:32::-;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:60::-;1639:3;1660:5;1653:12;;1611:60;;;:::o;1677:142::-;1727:9;1760:53;1778:34;1787:24;1805:5;1787:24;:::i;:::-;1778:34;:::i;:::-;1760:53;:::i;:::-;1747:66;;1677:142;;;:::o;1825:126::-;1875:9;1908:37;1939:5;1908:37;:::i;:::-;1895:50;;1825:126;;;:::o;1957:140::-;2021:9;2054:37;2085:5;2054:37;:::i;:::-;2041:50;;1957:140;;;:::o;2103:159::-;2204:51;2249:5;2204:51;:::i;:::-;2199:3;2192:64;2103:159;;:::o;2268:250::-;2375:4;2413:2;2402:9;2398:18;2390:26;;2426:85;2508:1;2497:9;2493:17;2484:6;2426:85;:::i;:::-;2268:250;;;;:::o;2524:180::-;2572:77;2569:1;2562:88;2669:4;2666:1;2659:15;2693:4;2690:1;2683:15;2710:194;2750:4;2770:20;2788:1;2770:20;:::i;:::-;2765:25;;2804:20;2822:1;2804:20;:::i;:::-;2799:25;;2848:1;2845;2841:9;2833:17;;2872:1;2866:4;2863:11;2860:37;;;2877:18;;:::i;:::-;2860:37;2710:194;;;;:::o;2910:410::-;2950:7;2973:20;2991:1;2973:20;:::i;:::-;2968:25;;3007:20;3025:1;3007:20;:::i;:::-;3002:25;;3062:1;3059;3055:9;3084:30;3102:11;3084:30;:::i;:::-;3073:41;;3263:1;3254:7;3250:15;3247:1;3244:22;3224:1;3217:9;3197:83;3174:139;;3293:18;;:::i;:::-;3174:139;2958:362;2910:410;;;;:::o;3326:180::-;3374:77;3371:1;3364:88;3471:4;3468:1;3461:15;3495:4;3492:1;3485:15;3512:185;3552:1;3569:20;3587:1;3569:20;:::i;:::-;3564:25;;3603:20;3621:1;3603:20;:::i;:::-;3598:25;;3642:1;3632:35;;3647:18;;:::i;:::-;3632:35;3689:1;3686;3682:9;3677:14;;3512:185;;;;:::o;3703:191::-;3743:3;3762:20;3780:1;3762:20;:::i;:::-;3757:25;;3796:20;3814:1;3796:20;:::i;:::-;3791:25;;3839:1;3836;3832:9;3825:16;;3860:3;3857:1;3854:10;3851:36;;;3867:18;;:::i;:::-;3851:36;3703:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "288000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REWARD_RATE()": "392",
								"earned(address)": "634",
								"lastUpdateTime()": "2469",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "2513",
								"rewards(address)": "2825",
								"s_rewardToken()": "infinite",
								"s_stakeingToken()": "infinite",
								"stakedBalance(address)": "2891",
								"useRewardPerTokenPaid(address)": "2847"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 926,
									"end": 1084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1017,
									"end": 1029,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1007,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 992,
									"end": 1007,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 992,
									"end": 1030,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1064,
									"end": 1075,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1054,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1041,
									"end": 1054,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1041,
									"end": 1076,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 926,
									"end": 1084,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 1518,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220635f0664d26e17cf381b2e99c5395e09ea68f16522e49e0564e12c1b848e058464736f6c63430008170033",
									".code": [
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "6374CC00"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "6374CC00"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "6FAB4536"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "C8F33C91"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "CD3DAF9D"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "DF136D65"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "8CC262"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "700037D"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "2CD2A93E"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "5997BB37"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "60217267"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 251,
											"end": 1518,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1434,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1434,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1434,
											"end": 1511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 606,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 606,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 606,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 654,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 654,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 654,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 399,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 552,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 552,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 552,
											"end": 599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 363,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 363,
											"end": 390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 327,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 517,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 517,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1092,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1092,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 478,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 478,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1487,
											"end": 1491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 606,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 432,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 399,
											"end": 434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 399,
											"end": 434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 552,
											"end": 599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 363,
											"end": 390,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 363,
											"end": 390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 327,
											"end": 356,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 327,
											"end": 356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 517,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1142,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1158,
											"end": 1175,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1158,
											"end": 1180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1236,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1155,
											"end": 1236,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1224,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1204,
											"end": 1224,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1197,
											"end": 1224,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1155,
											"end": 1236,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1155,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1281,
											"end": 1295,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1280,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1265,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1265,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1323,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 432,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1326,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1326,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1401,
											"end": 1418,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1401,
											"end": 1418,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1400,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1388,
											"end": 1418,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1388,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1418,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1388,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1365,
											"end": 1385,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1365,
											"end": 1418,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1365,
											"end": 1418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1365,
											"end": 1418,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1365,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1418,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 478,
											"end": 510,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 478,
											"end": 510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1665,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1805,
											"end": 1810,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1787,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1778,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1778,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1760,
											"end": 1813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1760,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1813,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1819,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1939,
											"end": 1944,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1908,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1908,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1945,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1951,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2021,
											"end": 2030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2054,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2054,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2041,
											"end": 2091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2097,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1957,
											"end": 2097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2204,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2199,
											"end": 2202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2192,
											"end": 2256,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2262,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2103,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2415,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2506,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2426,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2426,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2518,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2524,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2524,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2649,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2650,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2669,
											"end": 2673,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2666,
											"end": 2667,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2697,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2698,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2904,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2710,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2770,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2770,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2804,
											"end": 2824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2824,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2804,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2799,
											"end": 2824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2845,
											"end": 2846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2850,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2863,
											"end": 2874,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2860,
											"end": 2897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2877,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2877,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2860,
											"end": 2897,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2860,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2904,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 3320,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2910,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2973,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 2993,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2973,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 2993,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2968,
											"end": 2993,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3007,
											"end": 3027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3007,
											"end": 3027,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3007,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3002,
											"end": 3027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3102,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3084,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3084,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3084,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3250,
											"end": 3265,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3247,
											"end": 3248,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3244,
											"end": 3266,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3224,
											"end": 3225,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3217,
											"end": 3226,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3280,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3174,
											"end": 3313,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3293,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3174,
											"end": 3313,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3174,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 3320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 3320,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 3320,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 3320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 3320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2910,
											"end": 3320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3326,
											"end": 3506,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3326,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3371,
											"end": 3372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3475,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3461,
											"end": 3476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3587,
											"end": 3588,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3569,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3589,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3569,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3589,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3621,
											"end": 3622,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3603,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3623,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3603,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3623,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3623,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3632,
											"end": 3667,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3647,
											"end": 3665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3632,
											"end": 3667,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3632,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3687,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3691,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3512,
											"end": 3697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3894,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3703,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3762,
											"end": 3782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3762,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3782,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3814,
											"end": 3815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3796,
											"end": 3816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3816,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3796,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3839,
											"end": 3840,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3837,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 3863,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3864,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3851,
											"end": 3887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3867,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3867,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3887,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3851,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3894,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3894,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3894,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"contracts/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REWARD_RATE()": "5997bb37",
							"earned(address)": "008cc262",
							"lastUpdateTime()": "c8f33c91",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"s_rewardToken()": "6374cc00",
							"s_stakeingToken()": "6fab4536",
							"stakedBalance(address)": "60217267",
							"useRewardPerTokenPaid(address)": "2cd2a93e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_stakeingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"useRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/Staking.sol\":{\"keccak256\":\"0xf547ced345297535d2b4b9319765b2800d0996ed1dfa71b0acc70a4278411e5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a862c44116ed6e898ee29d09acd953125eb8ae2c47af7ebe576722dcf899750d\",\"dweb:/ipfs/QmVaKyufQroTRKCgkHMHY5DhFTTgDrpFNkiuNxS6s5qZuU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Staking.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 467,
								"contract": "contracts/Staking.sol:Staking",
								"label": "s_stakeingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 470,
								"contract": "contracts/Staking.sol:Staking",
								"label": "s_rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 475,
								"contract": "contracts/Staking.sol:Staking",
								"label": "totalStakedTokens",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "contracts/Staking.sol:Staking",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 479,
								"contract": "contracts/Staking.sol:Staking",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 483,
								"contract": "contracts/Staking.sol:Staking",
								"label": "stakedBalance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "contracts/Staking.sol:Staking",
								"label": "rewards",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 491,
								"contract": "contracts/Staking.sol:Staking",
								"label": "useRewardPerTokenPaid",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 142,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 142,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 142,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 142,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 142,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							454
						]
					},
					"id": 455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 454,
							"linearizedBaseContracts": [
								454
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 175,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															158
														],
														"declarations": [
															{
																"constant": false,
																"id": 158,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 175,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 157,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 162,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 159,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 160,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 163,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 170,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 168,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 156,
															"id": 169,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 172,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 173,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 156,
														"id": 174,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 454,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 203,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 190,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 196,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 194,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 188,
															"id": 195,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 198,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 199,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 201,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 188,
														"id": 202,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 454,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 245,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 216,
															"id": 223,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															226
														],
														"declarations": [
															{
																"constant": false,
																"id": 226,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 245,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 225,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 230,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 227,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 228,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 231,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 232,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 234,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 240,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 238,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 216,
															"id": 239,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 242,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 243,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 216,
														"id": 244,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 454,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 273,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 266,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 264,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 258,
															"id": 265,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 268,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 250,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 269,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 271,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 258,
														"id": 272,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 454,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 301,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 286,
															"id": 293,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 296,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 297,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 299,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 286,
														"id": 300,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 454,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 313,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 306,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 314,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 316,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 454,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 328,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 329,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 327,
												"id": 331,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 454,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 344,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 454,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 358,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 359,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 357,
												"id": 361,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 454,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 373,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 374,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 376,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 454,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "5054:106:2",
										"statements": [
											{
												"id": 401,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 391,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "5096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "5101:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 394,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "5104:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 390,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 396,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 397,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "5138:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 398,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "5142:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 389,
														"id": 400,
														"nodeType": "Return",
														"src": "5131:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4972:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4983:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4994:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5045:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:2"
									},
									"scope": 454,
									"src": "4959:201:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "5739:105:2",
										"statements": [
											{
												"id": 426,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 416,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "5781:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 419,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "5788:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 415,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 421,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 422,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "5822:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 423,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "5826:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 414,
														"id": 425,
														"nodeType": "Return",
														"src": "5815:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5679:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "5730:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:2"
									},
									"scope": 454,
									"src": "5644:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "6585:105:2",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 441,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "6627:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 444,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "6634:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 440,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 446,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 447,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "6668:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 448,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "6672:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 439,
														"id": 450,
														"nodeType": "Return",
														"src": "6661:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6503:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6514:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6525:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:2"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "6576:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:2"
									},
									"scope": 454,
									"src": "6490:200:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 455,
							"src": "482:6210:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:2"
				},
				"id": 2
			},
			"contracts/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Staking.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						],
						"ReentrancyGuard": [
							64
						],
						"SafeMath": [
							454
						],
						"Staking": [
							570
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 456,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 143,
							"src": "68:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 65,
							"src": "126:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 455,
							"src": "190:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 460,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"271:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "271:15:3"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "271:15:3"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570,
								64
							],
							"name": "Staking",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 464,
									"libraryName": {
										"id": 462,
										"name": "SafeMath",
										"nameLocations": [
											"300:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 454,
										"src": "300:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "294:27:3",
									"typeName": {
										"id": 463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "313:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "6fab4536",
									"id": 467,
									"mutability": "mutable",
									"name": "s_stakeingToken",
									"nameLocation": "341:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "327:29:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 466,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 465,
											"name": "IERC20",
											"nameLocations": [
												"327:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "327:6:3"
										},
										"referencedDeclaration": 142,
										"src": "327:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6374cc00",
									"id": 470,
									"mutability": "mutable",
									"name": "s_rewardToken",
									"nameLocation": "377:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "363:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 469,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 468,
											"name": "IERC20",
											"nameLocations": [
												"363:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "363:6:3"
										},
										"referencedDeclaration": 142,
										"src": "363:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 473,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "420:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "399:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 471,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "399:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 472,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "432:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 475,
									"mutability": "mutable",
									"name": "totalStakedTokens",
									"nameLocation": "454:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "441:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 474,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "441:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 477,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "490:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "478:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 476,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "478:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 479,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "529:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "517:26:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 478,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "517:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "60217267",
									"id": 483,
									"mutability": "mutable",
									"name": "stakedBalance",
									"nameLocation": "586:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "552:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 482,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 480,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "552:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 481,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "570:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 487,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "640:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "606:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 486,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 484,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "615:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "606:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 485,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "624:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2cd2a93e",
									"id": 491,
									"mutability": "mutable",
									"name": "useRewardPerTokenPaid",
									"nameLocation": "688:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "654:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 490,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 488,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "663:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "654:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 489,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "672:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 497,
									"name": "Staked",
									"nameLocation": "724:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "747:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "731:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "769:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "753:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:46:3"
									},
									"src": "718:59:3"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 503,
									"name": "Withdrawn",
									"nameLocation": "789:9:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "815:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "799:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "837:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "821:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:46:3"
									},
									"src": "783:62:3"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 509,
									"name": "RewardsClaimed",
									"nameLocation": "857:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "888:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "872:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "910:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "894:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:46:3"
									},
									"src": "851:67:3"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "981:103:3",
										"statements": [
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "s_stakeingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "992:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 518,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "1017:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 517,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "1010:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1010:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "992:38:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "992:38:3"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "s_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "1041:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 524,
																"name": "rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "1064:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 523,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "1057:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$142_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1057:19:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "1041:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "1041:35:3"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "946:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "938:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "rewardToken",
												"nameLocation": "968:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "960:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:43:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:0:3"
									},
									"scope": 570,
									"src": "926:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "1144:282:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 534,
														"name": "totalStakedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "1158:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1179:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1158:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 540,
												"nodeType": "IfStatement",
												"src": "1155:81:3",
												"trueBody": {
													"id": 539,
													"nodeType": "Block",
													"src": "1182:54:3",
													"statements": [
														{
															"expression": {
																"id": 537,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "1204:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 533,
															"id": 538,
															"nodeType": "Return",
															"src": "1197:27:3"
														}
													]
												}
											},
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "totalTime",
														"nameLocation": "1253:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "1248:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 541,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1248:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 543,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1265:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1271:9:3",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1265:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 545,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1281:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1265:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1248:47:3"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "totalRewards",
														"nameLocation": "1311:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "1306:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1306:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "REWARD_RATE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "1326:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 551,
														"name": "totalTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "1338:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1326:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1306:41:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1365:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 555,
															"name": "totalRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "1388:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 556,
															"name": "totalStakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1401:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1388:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1365:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 533,
												"id": 559,
												"nodeType": "Return",
												"src": "1358:60:3"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1101:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:2:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1138:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1138:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:6:3"
									},
									"scope": 570,
									"src": "1092:334:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "1493:18:3",
										"statements": []
									},
									"functionSelector": "008cc262",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "1443:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1458:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1450:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:17:3"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1487:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1487:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:6:3"
									},
									"scope": 570,
									"src": "1434:77:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 571,
							"src": "251:1267:3",
							"usedErrors": [],
							"usedEvents": [
								497,
								503,
								509
							]
						}
					],
					"src": "33:1489:3"
				},
				"id": 3
			}
		}
	}
}